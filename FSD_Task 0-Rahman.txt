Write a blog on Difference between HTTP1.1 vs HTTP2?
HTTP1.1 : [Hypertext Transfer Protocol – it is basis for almost all web applications, and it is method computers and servers use to request and send information. Its priorities in web applications to which pieces of content loaded for example : should the photo at the top of the article load first? should the text of the article load first? or should the banner ads load first?]
* Loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it.
* When compared to HTTP2 it is not that much faster.
* Prioritization affects a webpage's load time. For example, certain resources, like large JavaScript files, may block the rest of the page from loading if they must load first. More of the page can load at once if these render-blocking resources load last


HTTP2 :
* Single TCP connection to send multiple streams of data at once so that no one resource blocks.
* Splits data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to.
* HTTP2 is much faster and more efficient than HTTP1.1
* HTTP/2 offers a feature called weighted prioritization. This allows developers to decide which page resources will load first, every time. In HTTP/2, when a client makes a request for a webpage, the server sends several streams of data to the client at once, instead of sending one thing after another. This method of data delivery is known as multiplexing. Developers can assign each of these data streams a different weighted value, and the value tells the client which data stream to render first.

Write a blog about objects and its internal representation in JavaScript
Objects : objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.
Object can access in different ways :
Example 1 : Access a property with .property:
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};
Console.log(person.firstname + " is " + person.age + " years old.");
o/p:
John is 50 years old.
Example 2 : Access a property with ["property"]:
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};
Console.log(person["firstname"] + " is " + person["age"] + " years old.")
o/p:
John is 50 years old.
